/*
 * This file is generated by jOOQ.
 */
package se.callistaenterprise.kotlindsl.db;


import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import se.callistaenterprise.kotlindsl.db.tables.Customer;
import se.callistaenterprise.kotlindsl.db.tables.Item;
import se.callistaenterprise.kotlindsl.db.tables.Order;
import se.callistaenterprise.kotlindsl.db.tables.Product;
import se.callistaenterprise.kotlindsl.db.tables.records.CustomerRecord;
import se.callistaenterprise.kotlindsl.db.tables.records.ItemRecord;
import se.callistaenterprise.kotlindsl.db.tables.records.OrderRecord;
import se.callistaenterprise.kotlindsl.db.tables.records.ProductRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.6",
        "schema version:none"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CustomerRecord> CUSTOMER_CUSTOMER_ID_KEY = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("customer_customer_id_key"), new TableField[] { Customer.CUSTOMER.CUSTOMER_ID }, true);
    public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = Internal.createUniqueKey(Customer.CUSTOMER, DSL.name("customer_pkey"), new TableField[] { Customer.CUSTOMER.ID }, true);
    public static final UniqueKey<OrderRecord> ORDER_ORDER_ID_KEY = Internal.createUniqueKey(Order.ORDER, DSL.name("order_order_id_key"), new TableField[] { Order.ORDER.ORDER_ID }, true);
    public static final UniqueKey<OrderRecord> ORDER_PKEY = Internal.createUniqueKey(Order.ORDER, DSL.name("order_pkey"), new TableField[] { Order.ORDER.ID }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PKEY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pkey"), new TableField[] { Product.PRODUCT.ID }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PRODUCT_ID_KEY = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_product_id_key"), new TableField[] { Product.PRODUCT.PRODUCT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ItemRecord, OrderRecord> ITEM__ITEM_ORDER_ID_FKEY = Internal.createForeignKey(Item.ITEM, DSL.name("item_order_id_fkey"), new TableField[] { Item.ITEM.ORDER_ID }, Keys.ORDER_PKEY, new TableField[] { Order.ORDER.ID }, true);
    public static final ForeignKey<ItemRecord, ProductRecord> ITEM__ITEM_PRODUCT_ID_FKEY = Internal.createForeignKey(Item.ITEM, DSL.name("item_product_id_fkey"), new TableField[] { Item.ITEM.PRODUCT_ID }, Keys.PRODUCT_PKEY, new TableField[] { Product.PRODUCT.ID }, true);
    public static final ForeignKey<OrderRecord, CustomerRecord> ORDER__ORDER_CUSTOMER_ID_FKEY = Internal.createForeignKey(Order.ORDER, DSL.name("order_customer_id_fkey"), new TableField[] { Order.ORDER.CUSTOMER_ID }, Keys.CUSTOMER_PKEY, new TableField[] { Customer.CUSTOMER.ID }, true);
}
